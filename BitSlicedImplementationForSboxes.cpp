#include <iostream>

using namespace std;

typedef	unsigned short u16;


int main()
{
	u16 a;
	u16 b;
	u16 c;
	u16 d;

	// PRIDE Sbox
	/*********************************************************************************************************/
	/*u4 S[16] = { 0x0, 0x4, 0x8, 0xf, 0x1, 0x5, 0xe, 0x9, 0x2, 0x7, 0xa, 0xc, 0xb, 0xd, 0x6, 0x3,  };
	/*********************************************************************************************************/
	d = 0xaaaa;
	c = 0xcccc;
	b = 0xf0f0;
	a = 0xff00;
	u16 A = c ^ (a&b);
	u16 B = d ^ (b&c);
	u16 C = a ^ (A&B);
	u16 D = b ^ (B&C);

	for (int i = 0; i <16; i++)
	{
		u16 y = 
			(((A >> i) & 0x1) << 3) |
			(((B >> i) & 0x1) << 2) |
			(((C >> i) & 0x1) << 1) |
			(((D >> i) & 0x1) << 0);
		cout << hex << y << ", ";
	}
	cout << endl;

	u16 t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16;

	u16 h, g, f, e;

	// PRESENT & LED Sbox
	/*********************************************************************************************************/
	/*u4 S[16] = { 0xc, 0x5, 0x6, 0xb, 0x9, 0x0, 0xa, 0xd, 0x3, 0xe, 0xf, 0x8, 0x4, 0x7, 0x1, 0x2,  };
	/*********************************************************************************************************/
	a = 0xaaaa;
	b = 0xcccc;
	c = 0xf0f0;
	d = 0xff00;
	t1 = ~a;
	t2 = b ^ c;
	t3 = b & t2;
	t4 = d ^ t3;
	t5 = t2 & t4;
	t6 = a ^ t2;
	e = t4 ^ t6;
	t8 = b ^ t5;
	t9 = t1 & t8;
	f = t4 ^ t9;
	t11 = t1 ^ t4;
	t12 = t1 ^ t8;
	h = f ^ t12;
	t14 = t11 & t12;
	g = t6 ^ t14;
	for (int i = 0; i <16; i++)
	{
		u16 y =
			(((h >> i) & 0x1) << 3) |
			(((g >> i) & 0x1) << 2) |
			(((f >> i) & 0x1) << 1) |
			(((e >> i) & 0x1) << 0);
		cout << hex << y << ", ";
	}
	cout << endl;

	// PRESENT & LED inverse Sbox
	/*********************************************************************************************************/
	/*u4 S[16] = { 0x5, 0xe, 0xf, 0x8, 0xc, 0x1, 0x2, 0xd, 0xb, 0x4, 0x6, 0x3, 0x0, 0x7, 0x9, 0xa,  };
	/*********************************************************************************************************/
	a = 0xaaaa;
	b = 0xcccc;
	c = 0xf0f0;
	d = 0xff00;
	t1 = ~a;
	t2 = b ^ d;
	t3 = b & d;
	t4 = c ^ t3;
	e = t1 ^ t4;
	t6 = a ^ t2;
	t7 = t2 & e;
	t8 = b ^ t7;
	t9 = t6 | t8;
	h = t4 ^ t9;
	t11 = t6 ^ t8;
	t12 = t4 & t11;
	f = t6 ^ t12;
	t14 = ~t8;
	g = t12 ^ t14;
	for (int i = 0; i <16; i++)
	{
		u16 y =
			(((h >> i) & 0x1) << 3) |
			(((g >> i) & 0x1) << 2) |
			(((f >> i) & 0x1) << 1) |
			(((e >> i) & 0x1) << 0);
		cout << hex << y << ", ";
	}
	cout << endl;

	// PRINCE Sbox
	/*********************************************************************************************************/
	/*u4 S[16] = { 0xb, 0xf, 0x3, 0x2, 0xa, 0xc, 0x9, 0x1, 0x6, 0x7, 0x8, 0x0, 0xe, 0x5, 0xd, 0x4,  };
	/*********************************************************************************************************/
	a = 0xaaaa;
	b = 0xcccc;
	c = 0xf0f0;
	d = 0xff00;
	t1 = ~b;
	t2 = a & t1;
	t3 = c | t1;
	t4 = d & t3;
	g = t2 | t4;
	t6 = ~t4;
	t7 = c ^ t6;
	t8 = d ^ t7;
	t9 = t1 ^ t2;
	f = t8 | t9;
	t11 = a ^ g;
	t12 = t1 ^ t11;
	t13 = t8 | t11;
	t14 = t3 ^ t13;
	h = t7 ^ t14;
	t16 = t6 & t14;
	e = t12 ^ t16;


	for (int i = 0; i <16; i++)
	{
		u16 y =
			(((h >> i) & 0x1) << 3) |
			(((g >> i) & 0x1) << 2) |
			(((f >> i) & 0x1) << 1) |
			(((e >> i) & 0x1) << 0);
		cout << hex << y << ", ";
	}
	cout << endl;


	// PRINCE inverse Sbox
	/*********************************************************************************************************/
	/*u4 S[16] = { 0xb, 0x7, 0x3, 0x2, 0xf, 0xd, 0x8, 0x9, 0xa, 0x6, 0x4, 0x0, 0x5, 0xe, 0xc, 0x1,  };
	/*********************************************************************************************************/
	a = 0xaaaa;
	b = 0xcccc;
	c = 0xf0f0;
	d = 0xff00;
	t1 = a & b;
	t2 = d | t1;
	t3 = c ^ t2;
	t4 = ~t3;
	t5 = b | t3;
	t6 = d ^ t5;
	t7 = a | t6;
	g = b ^ t7;
	t9 = d | t4;
	t10 = a ^ t9;
	f = g ^ t10;
	t12 = t4 | f;
	t13 = t10 & t12;
	h = t6 ^ t13;
	t15 = g & h;
	e = t4 ^ t15;

	for (int i = 0; i <16; i++)
	{
		u16 y = 
			(((h >> i) & 0x1) << 3) |
			(((g >> i) & 0x1) << 2) |
			(((f >> i) & 0x1) << 1) |
			(((e >> i) & 0x1) << 0);
		cout << hex << y << ", ";
	}
	cout << endl;

	// RECTANGLE Sbox
	/*********************************************************************************************************/
	/*u4 S[16] = { 0x6, 0x5, 0xc, 0xa, 0x1, 0xe, 0x7, 0x9, 0xb, 0x0, 0x3, 0xd, 0x8, 0xf, 0x4, 0x2,  };
	/*********************************************************************************************************/
	a = 0xaaaa;
	b = 0xcccc;
	c = 0xf0f0;
	d = 0xff00;
	t1 = ~b;
	t2 = d | t1;
	t3 = a ^ t2;
	f = c ^ t3;
	t5 = a & t1;
	t6 = c ^ d;
	e = t5 ^ t6;
	t8 = b ^ c;
	t9 = t3 & t6;
	h = t8 ^ t9;
	t11 = e | t8;
	g = t3 ^ t11;


	for (int i = 0; i <16; i++)
	{
		u16 y =
			(((h >> i) & 0x1) << 3) |
			(((g >> i) & 0x1) << 2) |
			(((f >> i) & 0x1) << 1) |
			(((e >> i) & 0x1) << 0);
		cout << hex << y << ", ";
	}
	cout << endl;


	// RECTANGLE inverse Sbox
	/*********************************************************************************************************/
	/*u4 S[16] = { 0x9, 0x4, 0xf, 0xa, 0xe, 0x1, 0x0, 0x6, 0xc, 0x7, 0x3, 0x8, 0x2, 0xb, 0x5, 0xd,  };
	/*********************************************************************************************************/
	a = 0xaaaa;
	b = 0xcccc;
	c = 0xf0f0;
	d = 0xff00;
	t1 = a ^ b;
	t2 = a | d;
	t3 = c ^ t2;
	g = b ^ t3;
	t5 = a & t3;
	t6 = d ^ g;
	f = t5 ^ t6;
	t8 = ~f;
	t9 = t3 | t8;
	h = t1 ^ t9;
	t11 = t8 | h;
	e = t3 ^ t11;
	//Another implementation
    //t1 = a | d; t2 = a ^ d; t3 = (a & ~c); t4 = c ^ t1; g = b ^ t4; t6 = ~t4; t7 = d ^ g; f = t3 ^ t7; t9 = t6 | t7; h = t2 ^ t9; t11 = (f & ~h); e = t6 ^ t11;

	for (int i = 0; i <16; i++)
	{
		u16 y =
			(((h >> i) & 0x1) << 3) |
			(((g >> i) & 0x1) << 2) |
			(((f >> i) & 0x1) << 1) |
			(((e >> i) & 0x1) << 0);
		cout << hex << y << ", ";
	}
	cout << endl;


	system("Pause");

	return 0;
}